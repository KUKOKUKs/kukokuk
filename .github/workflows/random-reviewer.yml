name: "Random reviewer"

on:
  pull_request:
    types:
      - opened
    branches:
      - develop

permissions:
  pull-requests: write
  contents: read

jobs:
  random-reviewer:
    runs-on: ubuntu-latest
    steps:
      - id: random_reviewer
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const me = '${{ github.event.pull_request.user.login }}';
            const candidate = ['ksm001027', 'dayeong0120', 'lljungho'];
            const candidateWithoutMe = candidate.filter(id => id !== me);

            if (candidateWithoutMe.length === 0) {
              core.setFailed("리뷰어 후보가 없습니다. PR 작성자를 제외한 후보자가 1명 이상 있어야 합니다.");
              return;
            }

            const randomReviewer = candidateWithoutMe[Math.floor(Math.random() * candidateWithoutMe.length)];
            const comment = `@${randomReviewer} 님 랜덤 리뷰어로 당첨되셨습니다!리뷰를 부탁드립니다. 🙏`;
            core.setOutput('comment', comment);
            core.setOutput('reviewer', randomReviewer);

      - name: Comment PR
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            ${{ steps.random_reviewer.outputs.comment }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add Pull Request Reviewer (via GitHub Script)
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const reviewer = '${{ steps.random_reviewer.outputs.reviewer }}';
            const prNumber = context.issue.number;

            await github.pulls.requestReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              reviewers: [reviewer],
            });

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	// SCSS 컴파일을 위한 플러그인 추가
	id 'org.siouan.frontend-jdk17' version '8.0.0'
}

group = 'com.kukokuk'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot 개발 도구 (LiveReload, 자동 재시작 등 개발 편의)
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Spring Web MVC 및 REST API 지원
	implementation('org.springframework.boot:spring-boot-starter-web')

	// Thymeleaf 템플릿 엔진
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// Thymeleaf Layout Dialect (템플릿 레이아웃 구조 지원 ex. fragment 사용)
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.2.0'

	// Lombok (코드 자동 생성: @Getter, @Setter, @Log4j2 등)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Log4j2 로깅 설정 (Spring Boot의 기본 로그백을 Log4j2로 교체)
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'

	// Spring Security + Thymeleaf 연동 (로그인/권한 처리)
	implementation('org.springframework.boot:spring-boot-starter-security')

	// Thymeleaf와 Spring Security 연동 지원 (sec:authorize 등)
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	// Bean Validation (JSR-380) - @NotBlank, @Email 등 사용
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// MySQL 드라이버 (DB 연동용, runtimeOnly로 설정)
	runtimeOnly 'com.mysql:mysql-connector-j'

	// MyBatis 연동 (SQL 매핑 및 Mapper 인터페이스 사용)
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'

	// DTO ↔ Entity 변환 자동화 도구 (간단한 매핑 라이브러리)
	implementation 'org.modelmapper:modelmapper:3.1.1'

	// 테스트 도구 (Spring Boot Test, JUnit, Security Test 포함)
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// SQL 로그 출력용 log4jdbc (Log4j2 전용 버전)
	// - 쿼리 + 파라미터 + 실행 시간 확인 가능
	// - 사용 시 log4jdbc용 DataSource 설정 필요
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

	// Redis (인메모리 데이터 저장소)(외부 Redis 서버(로컬/원격))
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// .env로 환경변수 관리
	implementation("io.github.cdimascio:java-dotenv:5.2.2")

	// AWS SDK v1 계열
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.772'
	//WebSocket 및 STOMP 의존성
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// Redis 세션 저장소 (Spring Session)
	/*implementation 'org.springframework.session:spring-session-data-redis'*/

}

tasks.named('test') {
	useJUnitPlatform()
}

configurations.all {
	// log4j-to-slf4j는 log4j-slf4j2-impl과 충돌하므로 명시적으로 제거
	exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
	// logback-classic은 log4j2와 충돌하므로 명시적으로 제거
	exclude group: 'ch.qos.logback', module: 'logback-classic'
}


// SCSS 컴파일 설정 추가
frontend {
	nodeVersion = "18.19.0"
	assembleScript = "run build"
	cleanScript = "run clean"
	packageJsonDirectory = file("${projectDir}")
}

// processResources 태스크가 frontend 빌드 후 실행되도록 설정
processResources.dependsOn('assembleFrontend')
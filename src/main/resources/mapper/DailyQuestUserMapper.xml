<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kukokuk.mapper.DailyQuestUserMapper">

    <!--
         * 사용자의 퀘스트 완료 내역 수정(보상 수령 처리)
         * 식별자, 퀘스트번호, 사용자번호에 대한 조건처리가 필요하여
         * DailyQuestUser 객체로 처리
         * @param dailyQuestUser 사용자의 퀘스트 완료 내역 정보
        void updateDailyQuestUserObtained(DailyQuestUser dailyQuestUser);
    -->
    <update id="updateDailyQuestUserObtained" parameterType="DailyQuestUser">
        UPDATE
            KUKOKUK_DAILY_QUEST_USERS
        SET
            UPDATED_DATE = CURRENT_TIMESTAMP
          , IS_OBTAINED = #{isObtained}
        WHERE DAILY_QUEST_USER_NO = #{dailyQuestUserNo}
          AND USER_NO = #{userNo}
    </update>

    <!-- 퀘스트 완료 내역 resultMap -->
    <resultMap id="DailyQuestUserResultMap" type="DailyQuestUser">
        <id     column="DAILY_QUEST_USER_NO" property="dailyQuestUserNo" />
        <result column="DAILY_QUEST_NO" property="dailyQuestNo" />
        <result column="USER_NO" property="userNo" />
        <result column="IS_OBTAINED" property="isObtained" />
        <result column="CREATED_DATE" property="createdDate" />
    </resultMap>

    <!--
         * 사용자 번호와 퀘스트 번호로 오늘 퀘스트 완료 내역 조회
         * @param dailyQuestNo 퀘스트 번호
         * @param userNo 사용자 번호
         * @return 오늘 퀘스트 완료 내역 정보
        DailyQuestUser getDailyQuestUserByQuestNoAndUserNo(@Param("dailyQuestNo") int dailyQuestNo
            , @Param("userNo") int userNo);
    -->
    <select id="getDailyQuestUserByQuestNoAndUserNo" resultMap="DailyQuestUserResultMap">
        SELECT
            DAILY_QUEST_USER_NO
             , DAILY_QUEST_NO
             , USER_NO
             , IS_OBTAINED
             , CREATED_DATE
        FROM KUKOKUK_DAILY_QUEST_USERS
        WHERE USER_NO = #{userNo}
          AND DAILY_QUEST_NO = #{dailyQuestNo}
          AND CREATED_DATE &gt;= CURDATE()
          AND CREATED_DATE &lt;  CURDATE() + INTERVAL 1 DAY
    </select>

    <!--
         * 퀘스트 완료 내역 번호로 사용자의 오늘 퀘스트 완료 내역 조회
         * @param dailyQuestUserNo 퀘스트 완료 내역 번호
         * @param userNo 사용자 번호
         * @return 퀘스트 완료 내역
        DailyQuestUser getDailyQuestUserByDailyQuestUserNo(@Param("dailyQuestUserNo") int dailyQuestUserNo
            , @Param("userNo") int userNo);
    -->
    <select id="getDailyQuestUserByDailyQuestUserNo" resultMap="DailyQuestUserResultMap">
        SELECT
            DAILY_QUEST_USER_NO
             , DAILY_QUEST_NO
             , USER_NO
             , IS_OBTAINED
             , CREATED_DATE
        FROM KUKOKUK_DAILY_QUEST_USERS
        WHERE DAILY_QUEST_USER_NO = #{dailyQuestUserNo}
          AND USER_NO = #{userNo}
          AND CREATED_DATE &gt;= CURDATE()
          AND CREATED_DATE &lt;  CURDATE() + INTERVAL 1 DAY
    </select>

    <!--
         * 사용자의 일일도전과제 완료된 목록 조회
         * @param userNo 사용자 번호
         * @return 사용자의 일일도전과제 완료된 목록
        List<DailyQuestUser> getDailyQuestUserByUserNo(int userNo);
    -->
    <select id="getDailyQuestUserByUserNo" resultMap="DailyQuestUserResultMap">
        SELECT
            DAILY_QUEST_USER_NO
             , DAILY_QUEST_NO
             , USER_NO
             , IS_OBTAINED
             , CREATED_DATE
        FROM KUKOKUK_DAILY_QUEST_USERS
        WHERE USER_NO = #{userNo}
          AND CREATED_DATE &gt;= CURDATE()
          AND CREATED_DATE &lt;  CURDATE() + INTERVAL 1 DAY
        ORDER BY DAILY_QUEST_USER_NO
    </select>

    <!--
         * 퀘스트 완료 내역 등록
         * @param dailyQuestUser 퀘스트 완료 내역
        void insertDailyQuestUser(DailyQuestUser dailyQuestUser);
    -->
    <insert id="insertDailyQuestUser" parameterType="DailyQuestUser">
        INSERT INTO KUKOKUK_DAILY_QUEST_USERS ( DAILY_QUEST_NO
                                              , USER_NO)
        VALUES ( #{dailyQuestNo}
               , #{userNo})
    </insert>

    <!-- ///////////////// 아래 삭제 예정 ///////////////// -->
      <!--
        List<DailyQuestUser> getDailyQuestUsersByUserNo(@Param("userNo") int userNo,
              @Param("condition") Map<String, Object> condition);
      -->
      <select id="getDailyQuestUsersByUserNo" resultMap="DailyQuestUserResultMap">
          SELECT
          U.DAILY_QUEST_USER_NO,
          U.DAILY_QUEST_NO,
          U.IS_OBTAINED,
          U.CREATED_DATE,
          U.USER_NO
          FROM
          KUKOKUK_DAILY_QUEST_USERS U
          JOIN KUKOKUK_DAILY_QUESTS Q
          ON U.DAILY_QUEST_NO = Q.DAILY_QUEST_NO
          WHERE
          U.USER_NO = #{userNo}
          <if test="condition.contentType != null">
              AND Q.CONTENT_TYPE = #{condition.contentType}
          </if>
          <if test="condition.completedDate != null">
              AND DATE(U.CREATED_DATE) = DATE(#{condition.completedDate})
          </if>
      </select>

    <!--
    void getDailyQuestUserByNo(int dailyQuestUserNo);
    -->
    <select id="getDailyQuestUserByNo" resultMap="DailyQuestUserResultMap">
    SELECT DAILY_QUEST_USER_NO,
           DAILY_QUEST_NO,
           IS_OBTAINED,
           CREATED_DATE,
           USER_NO
    FROM
      KUKOKUK_DAILY_QUEST_USERS
    WHERE
      DAILY_QUEST_USER_NO = #{dailyQuestUserNo}
    </select>

    <!--
    void updateIsObtained(int dailyQuestUserNo);
    -->
    <update id="updateIsObtained">
        UPDATE KUKOKUK_DAILY_QUEST_USERS
        SET IS_OBTAINED  = 'Y',
            UPDATED_DATE = NOW()
        WHERE DAILY_QUEST_USER_NO = #{dailyQuestUserNo}
    </update>

    <!--
      void getTodayQuestUserByUserNoAndQuestNo(@Param("userNo") int userNo,
        @Param("dailyQuestNo") int dailyQuestNo);
    -->
    <select id="getTodayQuestUserByUserNoAndQuestNo" resultMap="DailyQuestUserResultMap">
        SELECT DAILY_QUEST_USER_NO,
               DAILY_QUEST_NO,
               IS_OBTAINED,
               CREATED_DATE,
               USER_NO
        FROM
            KUKOKUK_DAILY_QUEST_USERS
        WHERE
            USER_NO = #{userNo}
            AND DAILY_QUEST_NO = #{dailyQuestNo}
            AND DATE(CREATED_DATE) = CURDATE()
    </select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kukokuk.domain.quiz.mapper.QuizBookmarkedMapper">

    <!-- 사용자의 북마크한 문제 및 이력 조회 ResultMap -->
    <resultMap id="BookmarkedQuizDtoResultMap" type="BookmarkedQuizDto">
        <!-- 문제 -->
        <id property="bookmarkNo" column="BOOKMARK_NO"/>
        <result property="quizNo" column="QUIZ_NO"/>
        <result property="createdDate" column="CREATED_DATE"/>
        <result property="question" column="QUESTION"/>
        <result property="option1" column="OPTION1"/>
        <result property="option2" column="OPTION2"/>
        <result property="option3" column="OPTION3"/>
        <result property="option4" column="OPTION4"/>
        <result property="successAnswer" column="SUCCESS_ANSWER"/>
        <result property="questionType" column="QUESTION_TYPE"/>
        <result property="difficulty" column="DIFFICULTY"/>
        <result property="usageCount" column="USAGE_COUNT"/>
        <result property="successCount" column="SUCCESS_COUNT"/>
        <result property="accuracyRate" column="ACCURACY_RATE"/>

        <!-- 이력 -->
        <result property="resultNo" column="RESULT_NO"/>
        <result property="sessionNo" column="SESSION_NO"/>
        <result property="selectedChoice" column="SELECTED_CHOICE"/>
        <result property="isSuccess" column="IS_SUCCESS"/>
        <result property="resultDate" column="RESULT_DATE"/>
    </resultMap>

    <!--
         * 조건에 맞는 북마크한 이력 및 문제 목록 정보 조회
         * @param condition 조회할 데이터의 조건 값들이 담겨 있는 Map 객체 offset, rows, userNo
         * @return 북마크한 이력 및 문제 목록 정보
        List<BookmarkedQuizDto> getBookmarkQuizzes(Map<String, Object> condition);
    -->
    <select id="getBookmarkQuizzes" parameterType="map" resultMap="BookmarkedQuizDtoResultMap">
        WITH LATEST_RESULTS AS (
            -- 각 QUIZ_NO + USER_NO 조합에 대해 UPDATED_DATE 기준 최신 행에 ROW_NUMBER = 1 부여
            -- 동일 UPDATED_DATE가 있을 경우 RESULT_NO 내림차순으로 더 큰 것을 우선, 따라서 동시성으로 동일타임스탬프여도 deterministic
            SELECT QR.RESULT_NO
                 , QR.QUIZ_NO
                 , QR.USER_NO
                 , QR.SESSION_NO
                 , QR.IS_SUCCESS
                 , QR.SELECTED_CHOICE
                 , QR.UPDATED_DATE                                AS RESULT_DATE
                 , ROW_NUMBER() over (PARTITION BY QR.QUIZ_NO, QR.USER_NO
                ORDER BY QR.UPDATED_DATE DESC, QR.RESULT_NO DESC) AS RN
            FROM KUKOKUK_QUIZ_RESULTS QR)
        SELECT B.BOOKMARK_NO
             , B.QUIZ_NO
             , B.CREATED_DATE
             , M.QUESTION
             , M.OPTION1
             , M.OPTION2
             , M.OPTION3
             , M.OPTION4
             , M.SUCCESS_ANSWER
             , M.QUESTION_TYPE
             , M.DIFFICULTY
             , M.USAGE_COUNT
             , M.SUCCESS_COUNT
             , M.ACCURACY_RATE
             , R.RESULT_NO
             , R.SESSION_NO
             , R.SELECTED_CHOICE
             , R.IS_SUCCESS
             , R.RESULT_DATE
        FROM KUKOKUK_QUIZ_BOOKMARKED B
                 INNER JOIN KUKOKUK_QUIZ_MASTERS M
                            ON M.QUIZ_NO = B.QUIZ_NO
                 LEFT JOIN LATEST_RESULTS R
                           ON R.QUIZ_NO = B.QUIZ_NO
                               AND R.USER_NO = B.USER_NO
                               AND R.RN = 1 -- 각 그룹의 '하나의 최신 행'만 매칭
        WHERE B.USER_NO = #{userNo}
        ORDER BY B.CREATED_DATE DESC
        LIMIT #{offset}, #{rows}
    </select>

    <!--
         * 조회할 데이터의 총 행의 수 조회
         * @param condition 조회할 데이터의 조건 값들이 담겨 있는 Map 객체
         * @return 조회할 데이터의 총 데이터 행의 수
        int getTotalRows(int userNo);
    -->
    <select id="getTotalRows">
        SELECT COUNT(*)
        FROM KUKOKUK_QUIZ_BOOKMARKED
        WHERE USER_NO = #{userNo}
    </select>

    <!--
        * 북마크 등록
        * @param quizBookmarked 북마크 객체
        * @return int (등록된 row 수)
    -->
    <insert id="insertQuizBookmarked" parameterType="QuizBookmarked">
        INSERT INTO KUKOKUK_QUIZ_BOOKMARKED
            (USER_NO, QUIZ_NO, CREATED_DATE)
        VALUES (#{userNo}, #{quizNo}, NOW())
    </insert>

    <!--
        * 북마크 삭제
        * @param userNo 사용자 번호
        * @param quizNo 퀴즈 번호
        * @return int (삭제된 row 수)
    -->
    <delete id="deleteQuizBookmarkedByUserNoAndQuizNo">
        DELETE
        FROM KUKOKUK_QUIZ_BOOKMARKED
        WHERE USER_NO = #{userNo}
          AND QUIZ_NO = #{quizNo}
    </delete>

</mapper>

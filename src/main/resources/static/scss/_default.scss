/* accessibility */
.a11y-hidden {
    clip: rect(1px, 1px, 1px, 1px);
    clip-path: inset(50%);
    width: 1px;
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
}

.logo {
    display: block;
    width: var(--logoWidth);
    height: var(--logoHeight);
    background: url("/images/kukokuk_logo.png") 0 0 no-repeat;
    background-size: contain;

    &.fixed {
        position: fixed;
        top: var(--baseGap);
        left: calc(var(--baseGap) + var(--baseFontSize));
        z-index: 1;
    }

    &.small {
        width: var(--smallLogoWidth);
        height: var(--smallLogoHeight);
    }
}

.symbol_logo {
    display: block;
    width: var(--symbolLogoSize);
    aspect-ratio: 1 / 1;
    background: url("/images/kukokuk_symbol_logo.png") 0 0 no-repeat;
    background-size: contain;
    cursor: pointer;
}

.main {
    display: flex;
    min-height: 100vh;
}

/* content */
.content {
    width: 100%;
    padding: 0 var(--containerPadding);
    display: flex;
    justify-content: center;

    &.center {
        min-height: 100vh;
        flex-direction: column;
        justify-content: flex-start;
        align-items: center;
        max-width: var(--centerContentWidth); /* 디테일 컨텐츠 최대 사이즈 */
        margin: auto;
    }

    .center_content_wrap {
        width: var(--mainContentWidth);
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: var(--largeGap);
        padding: var(--containerPadding) 0;
    }
}

#main-content {
    width: 100%;
    max-width: var(--mainContentWidth); /* 컨텐츠 사이즈 */
    padding: var(--containerPadding);
    display: flex;
    flex-direction: column;
    gap: var(--baseGap);
}

#sub-content {
    width: 100%;
    max-width: var(--subContentWidth);
    padding: var(--containerPadding);
    display: flex;
    flex-direction: column;
    gap: var(--baseGap);
}

.content_info {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: var(--smallGap);
}

.content_title {
    width: 100%;
    font-size: var(--titleFontSize);
    font-weight: bold;
    display: flex;
    align-items: center;
    gap: var(--tinyGap);
}

.container {
    width: 100%;
    padding: var(--containerPadding);
}

#footer {
    position: sticky;
    left: 0;
    bottom: 0;
    background: #fff;

    .copyright {
        font-size: var(--smallFontSize);
        padding-bottom: var(--baseGap);
        padding-top: var(--largePadding);
    }
}

.component {
    width: 100%;
    padding: var(--smallPadding);
    border-radius: var(--bdrs);
    border: var(--baseBorder);
    box-shadow: var(--bxsh);

    /* 컴포넌트의 좌상단에 위치할 컴포넌트 title */
    .component_title {
        font-size: var(--largeFontSize);
        display: flex;
        justify-content: space-between;
        align-items: center;

        .title_info {
            font-weight: bold;
            display: flex;
            align-items: baseline;
            gap: var(--tinyGap);
        }

        /* 더 작은 글씨가 필요할 경우 */
        .small_info {
            font-size: var(--tinyFontSize);
            font-weight: normal;
            color: var(--grayColor);
        }
    }

    /* 리스트 요소 */
    .component_info {
        padding: var(--smallPadding);
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: var(--smallGap);

        &.small {
            font-size: var(--smallFontSize);

            &.with_icon {
                padding: var(--smallComponentWithIconPadding);

                .btn {
                    width: var(--baseIcon);
                    min-width: var(--baseIcon);
                    max-height: var(--smallIcon);
                    min-height: var(--smallIcon);
                    box-sizing: content-box;
                }
            }
        }
    }
}

/* base gap list */
.base_list_component {
    display: flex;
    flex-direction: column;
    gap: var(--baseGap);
}

/* tiny gap list */
.tiny_list_component {
    display: flex;
    flex-direction: column;
    gap: var(--tinyGap);
}

/* grid list */
.grid_list_component {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    gap: var(--smallGap);
}

/* 로그인/회원가입 페이지에서 확인 가능함  */
.form_component {
    width: 100%;
    max-width: var(--subContentWidth);
    padding-top: var(--containerPadding);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--baseGap);
    position: relative;
}

/* bar gauge */
.bar_gauge {
    width: 100%;
    height: 9px;
    font-size: var(--smallFontSize);
    background-color: var(--lightGrayColor);
    border-radius: var(--bdrs);
    border: 1px solid var(--borderColor);
    position: relative;

    .gauge {
        max-width: 100%;
        height: 100%;
        background-color: var(--yellowColor);
        border-radius: var(--bdrs);
        transition: width var(--trst), background-color var(--trst); // background-color 변경되면 ease룰 실행
    }

    .gauge_info {
        display: inline-block;
        font-size: var(--smallFontSize);
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .marker {
        display: flex;
        flex-direction: column;
        align-items: center;
        position: absolute;
        top: 50%;
        transform: translateY(-50%);

        .line {
            width: 3px;
            height: 18px;
            background-color: var(--darkGreenColor);
            border-radius: var(--bdrs);
        }

        .label {
            width: max-content;
            font-size: var(--subFontSize);
            position: absolute;
            top: 100%;
        }
    }
}

/* error page */
.error_wrap {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: var(--largeGap);
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    .error_title {
        display: flex;
        align-items: center;
        gap: var(--baseGap);
        font-size: var(--titleFontSize);

        .error_icon {
            width: var(--largeIcon);
            min-width: var(--largeIcon);
            height: var(--largeIcon);
            font-size: var(--largeIcon);
            display: flex;
            align-items: center;
            justify-content: center;
        }
    }
}

/* step bar*/
.step_bar {
    width: 100%;
    margin: 5px 0;
    background-color: var(--lightGrayColor);
    position: relative;

    .current_step {
        height: 3px;
        background-color: var(--primaryColor);
    }

    .step_circle_container { /* 생략 가능 요소 */
        width: 100%;
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: absolute;
        left: 0;
        top: 50%;
        transform: translateY(-50%);

        .step_circle {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background-color: var(--lightGrayColor);

            &.active {
                background-color: var(--primaryColor);
            }
        }
    }
}

/* form */
.form_wrap {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--baseGap);
    border-radius: var(--bdrs);
    position: relative;

    &.justify_content_center {
        justify-content: center;
    }
}

.form_input_list {
    width: 100%;
    display: flex;
    flex-direction: column;

    .input_info {
        height: var(--inputHeight);
        font-size: var(--subFontSize);
        background-color: #fff;
        padding: var(--inputPadding);
        border-width: 0 1px 1px 1px;
        border-style: solid;
        border-color: var(--borderColor);
        position: relative;
        overflow: hidden;

        &:has(.input_icon) {
            padding-right: var(--inputHeight);
        }

        &:first-child {
            border-radius: var(--bdrs) var(--bdrs) 0 0;
            border-width: 1px;

            &:has(input:focus)::after {
                border-radius: var(--bdrs) var(--bdrs) 0 0;
            }
        }

        &:last-child {
            border-radius: 0 0 var(--bdrs) var(--bdrs);

            &:has(input:focus)::after {
                border-radius: 0 0 var(--bdrs) var(--bdrs);
            }
        }

        &.one_input {
            border-radius: var(--bdrs);

            &:has(input:focus)::after {
                border-radius: var(--bdrs);
            }
        }

        input {
            height: 30px;
            line-height: 30px;
            font-size: var(--baseFontSize);
            position: relative;
            z-index: 1;
        }

        .input_title,
        .input_error {
            width: 100%;
            padding: 0 15px;
            font-size: var(--baseFontSize);
            color: var(--grayColor);
            position: absolute;
            top: 16px;
            left: 0;
            z-index: 1;
            transition: top var(--trst), font-size var(--trst);
            user-select: none;
            -webkit-user-select: none; /* Safari/Chrome */
            -moz-user-select: none; /* Firefox */

            &.disabled {
                opacity: 0;
            }
        }

        .input_error {
            color: var(--redColor);
            pointer-events: none;
            z-index: 2;
        }

        .input_icon {
            display: none;
            align-items: center;
            gap: var(--smallGap);
            position: absolute;
            top: 50%;
            right: 15px;
            z-index: 1;
            transform: translateY(-50%);

            .icon {
                width: var(--smallIcon);
                height: var(--smallIcon);
                padding: 0.35em;
                color: var(--darkGreenColor);
                display: flex;
                align-items: center;
                justify-content: center;
                cursor: pointer;

                &.password {
                    font-size: var(--baseFontSize);
                }
            }
        }

        &:has(input:not(:placeholder-shown)) {
            .input_icon {
                display: flex;
            }
        }

        &:has(input:focus),
        &:has(input:not(:placeholder-shown):not([type="date"])) {
            .input_title,
            .input_error {
                font-size: var(--smallFontSize);
                top: 5px;
                transform: none;
                pointer-events: none;
            }
        }

        &:not(.radio_info):has(input:focus)::after {
            content: "";
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
            border: 2px solid var(--primaryColor);
            transition: border var(--trst);
        }

        &.radio_info {
            padding: 0;
            display: flex;
            align-items: center;

            .radio_input {
                width: 100%;
                height: 100%;
                border-right: var(--baseBorder);
                transition: background-color var(--trst);

                &:last-child {
                    border-right: none;
                }

                .text {
                    width: 100%;
                    height: 100%;
                    color: var(--grayColor);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                }

                input[type=radio] {
                    position: absolute;
                    width: 0;
                    height: 0;
                    opacity: 0;
                }

                &:has(input:checked) {
                    background-color: var(--subColor);

                    .text {
                        font-weight: bold;
                        color: var(--primaryColor);
                    }
                }
            }
        }

        &.select_info {
            padding: 0;
            display: flex;
            align-items: center;

            .select_title {
                min-width: 80px;
                height: 100%;
                padding: 0 15px;
                display: flex;
                justify-content: space-between;
                align-items: center;
                background-color: var(--lightGrayColor);
            }
        }
    }
}

.input_description {
    width: 100%;
    font-size: var(--subFontSize);
}

/* tab content */
.tab_btn_list {
    width: 100%;
    background-color: var(--subColor);
    display: flex;
    align-items: center;
    border-radius: var(--bdrs) var(--bdrs) 0 0;
    border: var(--baseBorder);
    border-bottom: none;
    overflow: hidden;
    position: relative;

    .tab_btn {
        width: 100%;
        height: var(--tabHeight);
        border-bottom: var(--baseBorder);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: var(--smallFontSize);
        color: var(--grayColor);
        border-right: var(--baseBorder);
        cursor: pointer;
        position: relative;

        .active {
            display: none;
            width: calc(100% + (var(--bdrs) * 4));
            height: calc(var(--bdrs) * 2);
            background-color: #fff;
            position: absolute;
            bottom: -1px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 1;

            &::before {
                content: "";
                display: block;
                width: calc(var(--bdrs) * 2);
                height: calc(var(--bdrs) * 2);
                background-color: var(--subColor);
                border-width: 0 1px 1px 0;
                border-style: solid;
                border-color: var(--borderColor);
                border-radius: 0 0 var(--bdrs) 0;
                position: absolute;
                bottom: 0;
                left: 0;
                box-sizing: border-box;
            }

            &::after {
                content: "";
                display: block;
                width: calc(var(--bdrs) * 2);
                height: calc(var(--bdrs) * 2);
                background-color: var(--subColor);
                border-width: 0 0 1px 1px;
                border-style: solid;
                border-color: var(--borderColor);
                border-radius: 0 0 0 var(--bdrs);
                position: absolute;
                bottom: 0;
                right: 0;
                box-sizing: border-box;
            }
        }

        &.selected {
            font-weight: bold;
            color: var(--primaryColor);
            background-color: #fff;
            border-bottom-color: transparent;
            border-left: var(--baseBorder);
            border-radius: var(--bdrs) var(--bdrs) 0 0;

            .active {
                display: block;
            }
        }

        &.selected_left {
            border-right: none;
        }

        &:first-child.selected {
            border-left: none;

            .active::before{
                display: none;
            }
        }

        &:last-child {
            border-right: none;

            .active::after{
                display: none;
            }
        }
    }
}

.tab_content {
    display: none;

    &.selected {
        display: block;
    }

    .input_info:first-child {
        border-radius: 0;
        border-top: none;
    }

    .input_info.one_input {
        border-radius: 0 0 var(--bdrs) var(--bdrs);
    }
}

.error_message {
    font-size: var(--smallFontSize);
    color: var(--redColor);
}

/* modal */
.modal_wrap {
    display: none;
    width: 100%;
    height: 100%;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1;

    .modal_container {
        width: var(--modalWidth);
        background-color: #fff;
        border-radius: var(--bdrs);
        box-shadow: var(--bxsh);
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        transition: margin-top var(--trst);
        overflow: hidden;
        
        .btn_list {
            background-color: #fff;
        }

        .modal_top {
            width: 100%;
            border-bottom: var(--baseBorder);
            display: flex;
            align-items: center;
            justify-content: space-between;
            gap: var(--smallGap);
            padding: var(--modalTitlePadding);

            .modal_title {
                font-size: var(--baseFontSize);
                font-weight: bold;
            }

            .modal_close_btn {
                width: 30px;
                min-width: 30px;
                height: 30px;
                padding: 5px;
                font-size: 25px;
                display: flex;
                align-items: center;
                justify-content: center;
                cursor: pointer;
            }
        }

        .modal_info {
            width: 100%;
            min-height: var(--modalHeight);
            max-height: var(--modalHeight);
            padding: var(--modalPadding);
            justify-content: space-between;
            overflow-y: auto;

            &:has(.btn_list) {
                padding-bottom: 0;

                .btn_list {
                    padding: var(--modalPadding) 0;
                    position: sticky;
                    left: 0;
                    bottom: 0;
                }
            }

            &.small {
                min-height: var(--modalSmallHeight);
            }
        }
    }

    .modal_explanation_info {
        display: flex;
        flex-direction: column;
        gap: var(--smallGap);

        .modal_explanation {
            display: flex;
            align-items: flex-start;
            font-size: var(--smallFontSize);

            .explanation_title {
                min-width: var(--modalInfoTitleWidth);
                font-weight: bold;
            }

            .explanation {
                color: var(--grayColor);
            }
        }
    }
}

.dimmed {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background-color: var(--dimmedColor);
}

/* button */
.btn_list {
    width: 100%;
    background-color: #fff;
    display: flex;
    align-items: center;
    gap: var(--smallGap);

    &.sticky_bottom {
        padding: var(--smallPadding) 0 var(--containerPadding);
        position: sticky;
        bottom: 0; /* 화면 하단에 붙이기 */
        z-index: 1;
    }

    &.column {
        flex-direction: column; /* 수직 정렬 */
    }

    &.daily_study {
        margin: var(--baseGap) 0;
        justify-content: space-between;

        .btn {
            width: 25%;
        }
    }
}

.btn {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    min-width: max-content;
    padding: var(--smallPadding);
    border-radius: var(--bdrs);
    border: 1px solid var(--subColor);
    background-color: var(--subColor);
    color: var(--primaryColor);
    box-shadow: var(--insetBxsh);
    cursor: pointer;
    transition: border-color var(--trst), color var(--trst), background-color var(--trst);

    &.small {
        width: max-content;
        font-size: var(--smallFontSize);
    }

    &.tiny {
        width: max-content;
        font-size: var(--tinyFontSize);
        padding: var(--tinyPadding);
    }

    &.primary {
        border-color: var(--primaryColor);
        background-color: var(--primaryColor);
        color: #fff;
    }

    &.white {
        border-color: var(--borderColor);
        background-color: #fff;
    }

    &.dark {
        border-color: var(--darkGreenColor);
        background-color: var(--darkGreenColor);
        color: #fff;
    }

    &.gray {
        border: 2px solid var(--lightGrayColor);;
        background-color: transparent;
        color: var(--grayColor);
        box-shadow: none;
    }

    &:hover {
        border-color: var(--primaryColor);
        color: var(--primaryColor);
        background-color: #fff;
    }

    &.blink {
        animation: blink-color 2s infinite;
    }

    img {
        width: var(--smallIconImage);
    }
}

@keyframes blink-color {
    0%, 100% {
        border-color: var(--borderColor);
        background-color: #fff;
    }
    50% {
        border-color: var(--primaryColor);
        background-color: var(--primaryColor);
        color: #fff;
    }
}

.icon_btn {
    width: var(--baseIcon);
    min-width: var(--baseIcon);
    height: var(--baseIcon);
    font-size: var(--baseIcon);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;

    &.small {
        width: var(--smallIcon);
        min-width: var(--smallIcon);
        height: var(--smallIcon);
        font-size: var(--smallIcon);
    }
}

.hints_info {
    display: flex;
    align-items: center;

    .hint_icon {
        width: var(--baseIcon);
        min-width: var(--baseIcon);
        height: var(--baseIcon);
        padding: 5px;
    }

    .hint_count {
        font-size: var(--smallFontSize);
        color: var(--grayColor);
    }
}

#hint-count {
    display: inline-block;
    transition: transform var(--trst);

    &.action {
        transform: scale(1.5);
    }
}

/* display */
.d_none {
    display: none;
}

.cursor_pointer {
    cursor: pointer;
}

.disabled {
    pointer-events: none;
    opacity: .5;
}

.d_flex {
    width: 100%;
    display: flex;
}

.column {
    flex-direction: column !important; /* 세로형 */
}

.justify_content_center {
    justify-content: center !important; /* 중앙 정렬 */
}

.justify_content_between {
    justify-content: space-between !important; /* 양끝 정렬 */
}

.align_center {
    align-items: center !important; /* 수직/수평 정렬 */
}

.justify_content_end {
    justify-content: flex-end !important;
}

.align_end {
    align-items: flex-end !important; /* 끝 정렬 */
}

.base_gap {
    gap: var(--baseGap) !important; /* 기본 gap */
}

.small_gap {
    gap: var(--smallGap) !important; /* 작은 gap */
}

.tiny_gap {
    gap: var(--tinyGap) !important; /* 작은 gap */
}

.large_gap {
    gap: var(--largeGap) !important; /* 큰 gap */
}

.pd_0 {
    padding: 0 !important;
}

.pd_base {
    padding: var(--basePadding) !important;
}

.pd_top_base {
    padding-top: var(--basePadding) !important;
}

/* border */
.base_border {
    border: 2px solid var(--borderColor);
    border-radius: var(--bdrs);

    &.primary {
        border-color: var(--primaryColor);
    }

    &.sub {
        border-color: var(--subColor);
    }
}

.border_radius {
    border-radius: var(--bdrs);
}

.border_circle {
    border-radius: 50%;
}

.border_none {
    border: none;
}

/* 그림자 효과 */
.box_shadow {
    box-shadow: var(--bxsh);
}

/* background */
.bg_none {
    background: none;
}

.bg_primary {
    background-color: var(--primaryColor);
}

.bg_sub {
    background-color: var(--subColor);
}

.bg_light_gray {
    background-color: var(--lightGrayColor);
}

.bg_blue {
    background-color: var(--blueColor);
}

/* font */
.small_font {
    font-size: var(--smallFontSize);
}

.large_font {
    font-size: var(--largeFontSize);
}

.titlt_font {
    font-size: var(--titleFontSize);
}

.tac {
    text-align: center;
}

.bold {
    font-weight: bold;
}

.color_primary {
    color: var(--primaryColor);
}

.color_sub {
    color: var(--subColor);
}

.color_gray {
    color: var(--grayColor);
}

.color_white {
    color: #fff;
}

/*
    로딩 표시를 위한 클래스
    사용 예시
    <div class="loading_spinner">
        <div class="spinner"></div>
        <div>AI 피드백 생성 중...</div>
    </div>
 */
.loading_spinner {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--smallGap);

    &.full_height {
        height: 100%;
        justify-content: center;
    }

    .spinner {
        width: 32px;
        height: 32px;
        border: 3px solid var(--borderColor);
        border-top-color: var(--primaryColor);
        border-radius: 50%;
        animation: spin 0.8s linear infinite;
    }
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

/* 버튼에 빤딱이는 하이라이트를 주고 싶을 때 추가 */
.highlight {
    position: relative; /* ::before로 하이라이트 레이어를 버튼 안에 절대위치로 배치하기 위해 부모를 기준으로 삼음 */
    overflow: hidden; /* 버튼 밖으로 하이라이트 효과가 튀어나가지 않도록 잘라냄 */

    &:before {
        content: '';  /* 가상의 하이라이트 레이어를 만들기 위해 필수 */
        position: absolute; /* 버튼 내부에 절대 위치 배치 */
        top: 0;
        left: -75%; /* 시작 위치를 버튼 왼쪽 바깥쪽에서 시작 */
        width: 50%; /* 하이라이트 레이어의 너비 (너무 넓으면 번쩍거림 과해짐) */
        height: 100%;
        background: linear-gradient( /* 빛이 지나가는 효과를 주기 위한 그라디언트 */
                120deg,
                rgba(255, 255, 255, 0) 0%, /* 시작: 약간 흐린 흰색 */
                rgba(255, 255, 255, 0.5) 50%,  /* 중간: 강한 흰색 (빛의 중심) */
                rgba(255, 255, 255, 0) 100%  /* 끝: 다시 흐린 흰색 */
        );
        animation: shine 2s infinite; /* 빛이 지나가는 애니메이션 반복 */
    }
}

@keyframes shine {
    0% { left: -75%; } /* 시작 시 빛 레이어가 왼쪽 바깥에서 시작 */
    100% { left: 125%; } /* 끝날 때 오른쪽 바깥으로 이동 */
}

.highlight2 {
    position: relative;
    overflow: hidden;

    &::after {
        content: '';
        display: block;
        width: 100%;
        height: 100%;
        background: linear-gradient(
                120deg
            , transparent 0%
            , transparent 25%
            , rgba(255, 255, 255, 0.7) 50%
            , transparent 75%
            , transparent 100%
        );
        background-size: 400%, 100%;
        animation: shimmer 4.5s infinite;
        position: absolute;
        top: 0;
        left: 0;
        z-index: 1;
    }
}

@keyframes shimmer {
    0% {
        background-position: 100% 0; /* 시작 위치 */
    }
    30% {
        background-position: -30% 0; /* 반짝임 끝 */
    }
    100% {
        background-position: -30% 0; /* 나머지 구간은 멈춰서 쉬는 시간 */
    }
}
